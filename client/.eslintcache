[{"C:\\Users\\jcr3x\\Desktop\\CODES\\CODINGDOJO\\MERN\\EXAM\\MERN_Full_Stack\\client\\src\\index.js":"1","C:\\Users\\jcr3x\\Desktop\\CODES\\CODINGDOJO\\MERN\\EXAM\\MERN_Full_Stack\\client\\src\\App.js":"2","C:\\Users\\jcr3x\\Desktop\\CODES\\CODINGDOJO\\MERN\\EXAM\\MERN_Full_Stack\\client\\src\\reportWebVitals.js":"3","C:\\Users\\jcr3x\\Desktop\\CODES\\CODINGDOJO\\MERN\\EXAM\\MERN_Full_Stack\\client\\src\\views\\ListPage.jsx":"4","C:\\Users\\jcr3x\\Desktop\\CODES\\CODINGDOJO\\MERN\\EXAM\\MERN_Full_Stack\\client\\src\\components\\ItemList.jsx":"5","C:\\Users\\jcr3x\\Desktop\\CODES\\CODINGDOJO\\MERN\\EXAM\\MERN_Full_Stack\\client\\src\\components\\DeleteButton.jsx":"6","C:\\Users\\jcr3x\\Desktop\\CODES\\CODINGDOJO\\MERN\\EXAM\\MERN_Full_Stack\\client\\src\\views\\FormPage.jsx":"7","C:\\Users\\jcr3x\\Desktop\\CODES\\CODINGDOJO\\MERN\\EXAM\\MERN_Full_Stack\\client\\src\\components\\Form.jsx":"8","C:\\Users\\jcr3x\\Desktop\\CODES\\CODINGDOJO\\MERN\\EXAM\\MERN_Full_Stack\\client\\src\\views\\Details.jsx":"9"},{"size":500,"mtime":499162500000,"results":"10","hashOfConfig":"11"},{"size":445,"mtime":1611346779556,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":499162500000,"results":"13","hashOfConfig":"11"},{"size":1271,"mtime":1611347693864,"results":"14","hashOfConfig":"11"},{"size":1267,"mtime":1611346955977,"results":"15","hashOfConfig":"11"},{"size":434,"mtime":1611339028154,"results":"16","hashOfConfig":"11"},{"size":2099,"mtime":1611347718685,"results":"17","hashOfConfig":"11"},{"size":5991,"mtime":1611349577455,"results":"18","hashOfConfig":"11"},{"size":3032,"mtime":1611350347544,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"k36mro",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\jcr3x\\Desktop\\CODES\\CODINGDOJO\\MERN\\EXAM\\MERN_Full_Stack\\client\\src\\index.js",[],["44","45"],"C:\\Users\\jcr3x\\Desktop\\CODES\\CODINGDOJO\\MERN\\EXAM\\MERN_Full_Stack\\client\\src\\App.js",[],"C:\\Users\\jcr3x\\Desktop\\CODES\\CODINGDOJO\\MERN\\EXAM\\MERN_Full_Stack\\client\\src\\reportWebVitals.js",[],"C:\\Users\\jcr3x\\Desktop\\CODES\\CODINGDOJO\\MERN\\EXAM\\MERN_Full_Stack\\client\\src\\views\\ListPage.jsx",["46","47","48"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link, navigate } from \"@reach/router\";\r\nimport axios from \"axios\";\r\nimport ItemList from \"../components/ItemList\";\r\n\r\nexport default () => {\r\n    const [ pirates, setPirates ] = useState([]);\r\n    const settingList = (list) => {\r\n        setPirates(list);\r\n    }\r\n\r\n    useEffect(() => {\r\n        axios.get(\"http://localhost:8000/api/pirate\")\r\n        .then(res => {\r\n            console.log(res.data)\r\n            settingList(res.data);\r\n        })\r\n        .catch(err => console.log(err));\r\n    }, []);\r\n\r\n    const removingDOM = (pirateId) => {\r\n        settingList(pirates.filter(pirate => pirate._id != pirateId));\r\n    }\r\n\r\n    return(\r\n        <div style={{width: \"60%\", margin: \"0px auto\"}}>\r\n            <div style={{display: \"flex\", justifyContent: \"space-between\"}}>\r\n                <h1 style={{position: \"relative\", justifySelf: \"center\"}}>Pirate Crew</h1>\r\n                <div>\r\n                    <button style={{padding: \"10px\",position: \"relative\", justifySelf: \"right\", marginTop: \"30%\"}} onClick={ e => {navigate(\"/pirate/new\")} }>Add Pirate</button>\r\n                </div>\r\n            </div>\r\n            <ItemList items={pirates} removingDOM={removingDOM} />\r\n        </div>\r\n    )\r\n}","C:\\Users\\jcr3x\\Desktop\\CODES\\CODINGDOJO\\MERN\\EXAM\\MERN_Full_Stack\\client\\src\\components\\ItemList.jsx",["49","50"],"import { navigate } from \"@reach/router\";\r\nimport React from \"react\";\r\nimport DeleteButton from \"./DeleteButton\";\r\n\r\nexport default (props) => {\r\n    const { removingDOM } = props;\r\n    return(\r\n        <div>\r\n            {\r\n                props.items.map((item, i) => {\r\n                    return(\r\n                        <div key={i} id={i}>\r\n                            <div style={{width: \"50%\", display: \"flex\", justifyContent: \"space-between\", margin: \"10px auto\"}}>\r\n                            <img src={item.imageUrl} width=\"100\" height=\"90\"/>\r\n                                <div>\r\n                                    <p>{item.pirateName}</p>\r\n                                        <div style={{display: \"flex\", justifyContent: \"space-between\"}}>\r\n                                        <button style={{marginRight: \"30px\"}} onClick={ e => {navigate(\"/pirate/\" + item._id)} }>View Pirate</button>\r\n                                        <DeleteButton id={item._id} removingDOM={() => removingDOM(item._id)} />\r\n                                        </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n}","C:\\Users\\jcr3x\\Desktop\\CODES\\CODINGDOJO\\MERN\\EXAM\\MERN_Full_Stack\\client\\src\\components\\DeleteButton.jsx",["51"],"import axios from \"axios\";\r\nimport React from \"react\";\r\n\r\nexport default (props) => {\r\n    const { id, removingDOM } = props;\r\n    const deleting = (e) => {\r\n        axios.delete(\"http://localhost:8000/api/pirate/\" + id)\r\n            .then(res => {\r\n                removingDOM();\r\n            })\r\n    }\r\n    return(\r\n            <button onClick={ e => {deleting(e)} }>\r\n                Walk The Plank\r\n            </button>\r\n    )\r\n}","C:\\Users\\jcr3x\\Desktop\\CODES\\CODINGDOJO\\MERN\\EXAM\\MERN_Full_Stack\\client\\src\\views\\FormPage.jsx",["52"],"import React, { useState } from \"react\";\r\nimport { navigate } from \"@reach/router\";\r\nimport axios from \"axios\";\r\nimport Form from \"../components/Form\";\r\n\r\nexport default () => {\r\n    const [ errors, setErrors ] = useState();\r\n    const [ load, setLoad ] = useState(false);\r\n\r\n    const createPirate = (pirate) => {\r\n        console.log(pirate);\r\n        axios.post(\"http://localhost:8000/api/pirate/new\", pirate)\r\n            .then(res => {\r\n                console.log(res);\r\n                navigate(\"/pirate\");\r\n            })\r\n            .catch(err => {\r\n                const errorResponse = err.response.data.errors; // Get the errors from err.response.data\r\n                const errorArr = []; // Define a temp error array to push the messages in\r\n                for (const key of Object.keys(errorResponse)) { // Loop through all errors and get the messages\r\n                    errorArr.push(errorResponse[key].message)\r\n                }\r\n                // Set Errors\r\n                setErrors(errorArr);\r\n                setLoad(true);\r\n            });\r\n    }\r\n\r\n    return(\r\n        <div style={{width: \"60%\", margin: \"0px auto\"}}>\r\n            <div style={{display: \"flex\", justifyContent: \"space-between\"}}>\r\n                <h1 style={{position: \"relative\", justifySelf: \"center\"}}>Add Pirate</h1>\r\n                <div>\r\n                    <button style={{padding: \"10px\",position: \"relative\", justifySelf: \"right\", marginTop: \"30%\"}} onClick={ e => {navigate(\"/pirate\")} }>Crew Board</button>\r\n                </div>\r\n            </div>\r\n            {\r\n                load ?\r\n                <div>\r\n                    {\r\n                        errors.map((error, i) => {\r\n                            return(\r\n                                <p style={{color: \"red\"}}>{error}</p>\r\n                            )\r\n                        })\r\n                    }\r\n                </div> :\r\n                ''\r\n            }\r\n            <Form pirateNameIn=\"\" imageUrlIn=\"\" chestsIn=\"\" catchPhraseIn=\"\" crewPositionIn=\"\" submitInput={createPirate} />\r\n        </div>\r\n    )\r\n}","C:\\Users\\jcr3x\\Desktop\\CODES\\CODINGDOJO\\MERN\\EXAM\\MERN_Full_Stack\\client\\src\\components\\Form.jsx",["53","54","55","56"],"import React, { useState } from \"react\";\r\n\r\nexport default (props) => {\r\n    const { pirateNameIn, imageUrlIn, chestsIn, catchPhraseIn, crewPositionIn, pegLegIn, eyePatchIn, hookHandIn,  submitInput } = props;\r\n    const [ pirateName, setPirateName ] = useState(pirateNameIn);\r\n    const [ imageUrl, setImageUrl ] = useState(imageUrlIn);\r\n    const [ chests, setChests ] = useState(chestsIn);\r\n    const [ catchPhrase, setCatchPhrase ] = useState(catchPhraseIn);\r\n    const [ crewPosition, setCrewPosition ] = useState(crewPositionIn);\r\n    const [ pegLeg, setPegLeg ] = useState(true);\r\n    const [ eyePatch, setEyePatch ] = useState(true);\r\n    const [ hookHand, setHookHand ] = useState(true);\r\n\r\n    const Process = (e) => {\r\n        e.preventDefault();\r\n        submitInput({ pirateName, imageUrl, chests, catchPhrase, crewPosition, pegLeg, eyePatch, hookHand });\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            {JSON.stringify({ pirateName, imageUrl, chests, catchPhrase, crewPosition, pegLeg, eyePatch, hookHand })}\r\n            <form onSubmit={Process}>\r\n                <div style={{display: \"flex\", justifyContent: \"space-between\", marginTop: \"50px\", textAlign: \"left\"}}>\r\n                    <table>\r\n                        <tr>\r\n                            <td><label>Pirate Name:</label></td>\r\n                            <td>\r\n                                <input type=\"text\" \r\n                                name=\"pirateName\"\r\n                                value={pirateName}\r\n                                onChange={ e => { setPirateName(e.target.value) } } \r\n                                style={{marginBottom: \"20px\"}}/>\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td><label>Image Url:</label></td>\r\n                            <td>\r\n                                <input type=\"text\" \r\n                                name=\"imageUrl\"\r\n                                value={imageUrl}\r\n                                onChange={ e => { setImageUrl(e.target.value) } } \r\n                                style={{marginBottom: \"20px\"}}/>\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td><label># of Treasure Chests:</label></td>\r\n                            <td>\r\n                                <input type=\"number\" \r\n                                name=\"chests\"\r\n                                value={chests}\r\n                                onChange={ e => { setChests(e.target.value) } } \r\n                                style={{marginBottom: \"20px\"}}/>\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td><label>Pirate Catch Phrase:</label></td>\r\n                            <td>\r\n                                <textarea\r\n                                cols=\"25\"\r\n                                name=\"catchPhrase\"\r\n                                value={catchPhrase}\r\n                                onChange={ e => { setCatchPhrase(e.target.value) } } ></textarea>\r\n                            </td>\r\n                        </tr>\r\n                    </table>\r\n                    \r\n                    <table>\r\n                        <tr>\r\n                            <td><label>Crew Position:</label></td>\r\n                            <td>\r\n                                <select name=\"crewPosition\"onChange={ e => { setCrewPosition(e.target.value) } } style={{marginBottom: \"20px\"}}>\r\n                                    <option value=\"\" disabled selected>Select Position</option>\r\n                                    <option value=\"Captain\">Captain</option>\r\n                                    <option value=\"First Mate\">First Mate</option>\r\n                                    <option value=\"Quarter Master\">Quarter Master</option>\r\n                                    <option value=\"Boatswain\">Boatswain</option>\r\n                                    <option value=\"Powder Monkey\">Powder Monkey</option>\r\n                                </select>\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td><label>Peg Leg:</label></td>\r\n                            <td>\r\n                                <input type=\"checkbox\"\r\n                                name=\"pegLeg\"\r\n                                checked={pegLeg}\r\n                                onClick={ e => setPegLeg(!pegLeg) } \r\n                                style={{marginBottom: \"20px\"}}/>\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td><label>Eye Patch:</label></td>\r\n                            <td>\r\n                                <input type=\"checkbox\"\r\n                                name=\"eyePatch\"\r\n                                checked={eyePatch}\r\n                                onClick={ e => setEyePatch(!eyePatch) } \r\n                                style={{marginBottom: \"20px\"}}/>\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td><label>Hook Hand:</label></td>\r\n                            <td>\r\n                                <input type=\"checkbox\"\r\n                                name=\"hookHand\"\r\n                                checked={hookHand}\r\n                                onClick={ e => setHookHand(!hookHand) } \r\n                                style={{marginBottom: \"20px\"}}/>\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>\r\n                                <input type=\"submit\" style={{width: \"200%\", height: \"200%\"}} />\r\n                            </td>\r\n                        </tr>\r\n                    </table>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}","C:\\Users\\jcr3x\\Desktop\\CODES\\CODINGDOJO\\MERN\\EXAM\\MERN_Full_Stack\\client\\src\\views\\Details.jsx",["57","58","59","60"],{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","severity":1,"message":"66","line":2,"column":10,"nodeType":"67","messageId":"68","endLine":2,"endColumn":14},{"ruleId":"69","severity":1,"message":"70","line":6,"column":1,"nodeType":"71","endLine":36,"endColumn":2},{"ruleId":"72","severity":1,"message":"73","line":22,"column":57,"nodeType":"74","messageId":"75","endLine":22,"endColumn":59},{"ruleId":"69","severity":1,"message":"70","line":5,"column":1,"nodeType":"71","endLine":29,"endColumn":2},{"ruleId":"76","severity":1,"message":"77","line":14,"column":29,"nodeType":"78","endLine":14,"endColumn":79},{"ruleId":"69","severity":1,"message":"70","line":4,"column":1,"nodeType":"71","endLine":17,"endColumn":2},{"ruleId":"69","severity":1,"message":"70","line":6,"column":1,"nodeType":"71","endLine":53,"endColumn":2},{"ruleId":"69","severity":1,"message":"70","line":3,"column":1,"nodeType":"71","endLine":121,"endColumn":2},{"ruleId":"65","severity":1,"message":"79","line":4,"column":80,"nodeType":"67","messageId":"68","endLine":4,"endColumn":88},{"ruleId":"65","severity":1,"message":"80","line":4,"column":90,"nodeType":"67","messageId":"68","endLine":4,"endColumn":100},{"ruleId":"65","severity":1,"message":"81","line":4,"column":102,"nodeType":"67","messageId":"68","endLine":4,"endColumn":112},{"ruleId":"69","severity":1,"message":"70","line":5,"column":1,"nodeType":"71","endLine":75,"endColumn":2},{"ruleId":"65","severity":1,"message":"82","line":6,"column":13,"nodeType":"67","messageId":"68","endLine":6,"endColumn":24},{"ruleId":"83","severity":1,"message":"84","line":33,"column":8,"nodeType":"85","endLine":33,"endColumn":10,"suggestions":"86"},{"ruleId":"76","severity":1,"message":"77","line":44,"column":21,"nodeType":"78","endLine":44,"endColumn":124},"no-native-reassign",["87"],"no-negated-in-lhs",["88"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'pegLegIn' is assigned a value but never used.","'eyePatchIn' is assigned a value but never used.","'hookHandIn' is assigned a value but never used.","'removingDOM' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.id'. Either include it or remove the dependency array.","ArrayExpression",["89"],"no-global-assign","no-unsafe-negation",{"desc":"90","fix":"91"},"Update the dependencies array to be: [props.id]",{"range":"92","text":"93"},[1170,1172],"[props.id]"]